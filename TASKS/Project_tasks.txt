TASKS

 (1) Adapt text and examples to our new formal definitions  (Done.)
 (2) Write down the theorem in a nice way  (Done.)
 (3) Try to prove the theorem    (InProgress)
		- If the statement is relevant then changing it to havoc will make the assume statement restrictive.
		  and the WP of a havoc statment with a negative of a guard will be false if we take the negative sign out of the WP() operator ??

	(3b) Use lemma 5 to prove the first small case. (Done)

	(3c) There might be a probelm with the proof for the first case  
		The problem is that i proved the theorem for the first case for all statements. it dosent matter if the statement is relevant or not. 
		I somehow need a distinction, that if the statement is relenvant, then only in that case, that implcation does not hold. Other wise it holds.

	(3d) Contiue with the proof for the general case  [IN Progress..]
		(3c.1) Think about the case where you have i=0 but the length of the trace is now 'n' and not 2 [In Progress]
		(3c.2) Write a new lemma explaing that step u did in the proof without any explanantion. it is on the photo of the white board.

 (4) Think about analogous definitions for our "Golden Frame" relevancy. (UPNEXT)  
 (5) Write down an analogous theorem for our "Golden Frame" relevancy.   (UPNEXT)


*****THINK ABOUT IT ******

Tasks for all of us:
We need better terminology.
How should we call the "normal" relevancy and the "Golden Frame" relevancy?
Finding a good terminology for this is very important since if we are going to
publish this work, our main contributions is probably the "Golden Frame"
relevancy.

Some preliminary ideas.
"Assignment Relevancy" and "Havoc Relevancy"
"Restrictive Relevancy" and "Relaxing Relevancy"
"Input Relevancy"
Something that does not have "Relevancy" in its name.
"Error Enforcing" and "Error Admitting" allows us to admit into the error trace
"Error Supporting"
"Error Fostering"
Something related to "Security"
